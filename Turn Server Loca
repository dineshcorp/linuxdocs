# üåÄ Local TURN Server Setup Guide (Ubuntu 20.04)

This guide explains how to **install, configure, and integrate a local-only TURN server** using **Coturn** with **Asterisk + PJSIP**, for WebRTC and SIP NAT traversal within a private network.

---

## üìã Overview

- **Operating System:** Ubuntu 20.04  
- **TURN Server Software:** [Coturn](https://github.com/coturn/coturn)  
- **Use Case:** Local-only TURN server (no public IP or domain required)  
- **Local IP:** `172.25.65.81`  
- **Integrated With:** Asterisk (RTP + PJSIP for WebRTC)

---

## ‚öôÔ∏è 1. Install Coturn

```bash
sudo apt update
sudo apt install coturn -y
Enable Coturn daemon on boot:

bash
Copy code
sudo vim /etc/default/coturn
Uncomment the following line:

ini
Copy code
TURNSERVER_ENABLED=1
Save and exit.

üß© 2. Configure TURN Server
Edit the configuration file:

bash
Copy code
sudo vim /etc/turnserver.conf
Add the following settings:

ini
Copy code
# =============================
# Basic TURN Server Settings
# =============================

# Listening ports
listening-port=3478
tls-listening-port=5349

# Bind TURN to your local network interface
listening-ip=172.25.65.81
relay-ip=172.25.65.81

# Internal-only setup (no external IP)
# external-ip=

# Authentication mode (long-term credentials)
lt-cred-mech
realm=172.25.65.81

# Static TURN credentials (username:password)
user=dtel:dtel@123

# =============================
# Optional TLS Settings
# =============================

# Self-signed or internal certificates
cert=/etc/ssl/certs/nginx-selfsigned.crt
pkey=/etc/ssl/private/nginx-selfsigned.key

# =============================
# Security & Performance
# =============================

fingerprint
no-multicast-peers
no-loopback-peers
stale-nonce

# =============================
# Logging
# =============================

log-file=/var/log/turnserver.log
simple-log
Restart the service:

bash
Copy code
sudo systemctl restart coturn
sudo systemctl enable coturn
Check status:

bash
Copy code
sudo systemctl status coturn
üîí 3. Firewall Configuration (if applicable)
If ufw or another firewall is active, open the required TURN ports:

bash
Copy code
sudo ufw allow 3478/udp
sudo ufw allow 5349/tcp
üß† 4. Integrate TURN with Asterisk
a. Disable STUN module
Edit Asterisk modules configuration:

bash
Copy code
sudo vim /etc/asterisk/modules.conf
Add the following line:

ini
Copy code
noload => res_stun_monitor.so
Unload it immediately:

bash
Copy code
sudo asterisk -rx "module unload res_stun_monitor.so"
b. Configure RTP to Use TURN
Edit Asterisk RTP configuration:

bash
Copy code
sudo vim /etc/asterisk/rtp.conf
Update as follows:

ini
Copy code
; Existing STUN configuration (disable/comment it)
;stunaddr=stun.l.google.com:19302

# Use TURN instead
turn_server=172.25.65.81
turn_port=3478
turn_username=dtel
turn_password=dtel@123
Save and exit.

üåê 5. Configure PJSIP (for WebRTC & ICE)
Edit the PJSIP global section:

bash
Copy code
sudo vim /var/www/asterisk/pjsip.conf
Add these parameters under [global]:

ini
Copy code
[global]
turn_server=172.25.65.81
turn_port=3478
turn_username=dtel
turn_password=dtel@123
Restart Asterisk:

bash
Copy code
sudo asterisk -rx "core restart now"
